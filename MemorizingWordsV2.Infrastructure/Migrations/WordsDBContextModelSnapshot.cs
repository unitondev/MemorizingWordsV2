// <auto-generated />
using System;
using MemorizingWordsV2.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MemorizingWordsV2.Infrastructure.Migrations
{
    [DbContext(typeof(WordsDBContext))]
    partial class WordsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.EnglishRussianWord", b =>
                {
                    b.Property<int>("EnglishId")
                        .HasColumnType("int")
                        .HasColumnName("english_id");

                    b.Property<int>("RussianId")
                        .HasColumnType("int")
                        .HasColumnName("russian_id");

                    b.HasKey("EnglishId", "RussianId")
                        .HasName("PK__English___599173F6506BDEBE");

                    b.HasIndex("RussianId");

                    b.ToTable("English_Russian_Words");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.EnglishWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int?>("PartOfSpeechId")
                        .HasColumnType("int")
                        .HasColumnName("part_of_speech_id");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("word");

                    b.HasKey("Id");

                    b.HasIndex("PartOfSpeechId");

                    b.ToTable("EnglishWords");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.PartOfSpeech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("part_name");

                    b.HasKey("Id");

                    b.ToTable("PartOfSpeech");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.RussianWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("word");

                    b.HasKey("Id");

                    b.ToTable("RussianWords");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.EnglishRussianWord", b =>
                {
                    b.HasOne("MemorizingWordsV2.Domain.Models.EnglishWord", "English")
                        .WithMany("EnglishRussianWords")
                        .HasForeignKey("EnglishId")
                        .HasConstraintName("FK__English_R__engli__4AB81AF0")
                        .IsRequired();

                    b.HasOne("MemorizingWordsV2.Domain.Models.RussianWord", "Russian")
                        .WithMany("EnglishRussianWords")
                        .HasForeignKey("RussianId")
                        .HasConstraintName("FK__English_R__russi__4BAC3F29")
                        .IsRequired();

                    b.Navigation("English");

                    b.Navigation("Russian");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.EnglishWord", b =>
                {
                    b.HasOne("MemorizingWordsV2.Domain.Models.PartOfSpeech", "PartOfSpeech")
                        .WithMany("EnglishWords")
                        .HasForeignKey("PartOfSpeechId")
                        .HasConstraintName("FK__EnglishWo__part___45F365D3")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PartOfSpeech");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.EnglishWord", b =>
                {
                    b.Navigation("EnglishRussianWords");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.PartOfSpeech", b =>
                {
                    b.Navigation("EnglishWords");
                });

            modelBuilder.Entity("MemorizingWordsV2.Domain.Models.RussianWord", b =>
                {
                    b.Navigation("EnglishRussianWords");
                });
#pragma warning restore 612, 618
        }
    }
}
